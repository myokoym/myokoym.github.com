<?xml version="1.0" encoding="UTF-8"?><rdf:RDF xmlns="http://purl.org/rss/1.0/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xml:lang="ja"><channel rdf:about="http://myokoym.github.com/"><title>my_letter</title><link>http://myokoym.github.com/</link><dc:date>2013-12-03</dc:date><description>my_letter</description><items><rdf:Seq><rdf:li rdf:resource="http://myokoym.github.com/entries/20131203/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20131202/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20131201/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20131030/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20131029/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20131009/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130929/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130923/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130909/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130907/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130901/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130829/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130828/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130825/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130822/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130819/a1.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130819/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130810/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130808/a2.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130808/a1.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130808/a0.html"/></rdf:Seq></items></channel><item about="http://myokoym.github.com/entries/20131203/a0.html"><title>GtkAdventCalendarで作るアドベントカレンダーアプリ</title><description>GNOME Advent Calendar 2013
の3日目の記事です。
2日目はクリアコードさんのGTK-Docの使い方
でした。
今回は、
1日目
に作成した
GtkAdventCalendar
をライブラリーとして使い、
カスタマイズしたアドベントカレンダーアプリを作成します。
（今回は、前回に増してRubyの話がほとんどで、GNOMEっぽくないです）
まずは、GtkAdventCalen...</description><content:encoded><![CDATA[<p><a href="http://www.adventar.org/calendars/102">GNOME Advent Calendar 2013</a>
の3日目の記事です。
<a href="http://www.clear-code.com/blog/2013/12/2.html">2日目はクリアコードさんのGTK-Docの使い方</a>
でした。</p>
<p>今回は、
<a href="http://myokoym.github.io/entries/20131201/a0.html">1日目</a>
に作成した
<a href="https://github.com/myokoym/gtk_advent_calendar">GtkAdventCalendar</a>
をライブラリーとして使い、<br>
カスタマイズしたアドベントカレンダーアプリを作成します。<br>
（今回は、前回に増してRubyの話がほとんどで、GNOMEっぽくないです）</p>
<p>まずは、GtkAdventCalendarをライブラリーとして使いやすいように修正します。</p>
<h2>修正点</h2>
<ol>
<li>日付ボタンをクリックしたときの動作を変更しやすくする

<ul>
<li>メソッドに切り出す</li>
</ul>
</li>
<li>
<code>require</code>で読み込みやすくする</li>
</ol>
<p>具体的には以下の通りです。</p>
<h3>1. 日付ボタンをクリックしたときの動作を変更しやすくする</h3>
<p><a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar/calendar.rb">lib/gtk<em>advent</em>calendar/calendar.rb</a></p>
<h4>修正前</h4>
<div class="highlight"><pre><span class="k">module</span> <span class="nn">GtkAdventCalendar</span>
  <span class="k">class</span> <span class="nc">Calendar</span>
    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
    <span class="k">def</span> <span class="nf">day</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
      <span class="n">button</span><span class="o">.</span><span class="n">signal_connect</span><span class="p">(</span><span class="s2">"clicked"</span><span class="p">)</span> <span class="k">do</span>
        <span class="n">show_uri</span><span class="p">(</span><span class="s2">"http://en.wikipedia.org/wiki/December_</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
      <span class="k">end</span>
      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
    <span class="k">end</span>
    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
<h4>修正後</h4>
<div class="highlight"><pre><span class="k">module</span> <span class="nn">GtkAdventCalendar</span>
  <span class="k">class</span> <span class="nc">Calendar</span>
    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
    <span class="k">def</span> <span class="nf">day</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
      <span class="n">button</span><span class="o">.</span><span class="n">signal_connect</span><span class="p">(</span><span class="s2">"clicked"</span><span class="p">)</span> <span class="k">do</span>
        <span class="n">action</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
      <span class="k">end</span>
      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">action</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
      <span class="n">show_uri</span><span class="p">(</span><span class="s2">"http://en.wikipedia.org/wiki/December_</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
<p>これで、<code>action(n)</code>メソッドを上書きするだけで、日付のボタンを<br>
押したときの動作を変更することができるようになりました。</p>
<h3>2. <code>require</code>で読み込みやすくする</h3>
<p>Rubyでは、ライブラリーは主に<code>require</code>コマンドで読み込みますが、<br>
ファイル名まで指定するのは面倒です。（前回の
<a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar/command.rb">Commandクラス</a>
を参照）</p>
<p>そこで、ライブラリー名だけでCalendarクラスを読み込めるようにします。</p>
<p><a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar.rb">lib/gtk<em>advent</em>calendar.rb</a></p>
<h4>修正前</h4>
<div class="highlight"><pre><span class="nb">require</span> <span class="s2">"gtk_advent_calendar/version"</span>
</pre></div>
<p>ここにパスを書いておくと、<code>require "gtk_advent_calendar"</code>で読み込まれます。</p>
<p><code>version</code>を読み込んでいる行は、<code>bundle gem</code>コマンドでRubyGems用の<br>
雛形を作成したときに生成されたものです。そこに<code>calendar</code>も追加します。</p>
<h4>修正後</h4>
<div class="highlight"><pre><span class="nb">require</span> <span class="s2">"gtk_advent_calendar/version"</span>
<span class="nb">require</span> <span class="s2">"gtk_advent_calendar/calendar"</span>
</pre></div>
<p>これで、<code>require "gtk_advent_calendar"</code>と書くだけで<br>
<code>GtkAdventCalendar::Calendar</code>クラスが使えるようになりました。</p>
<p>参考までに、RubyGemsの雛形については @hibariya さんのスライドに<br>
わかりやすくまとまっています。興味のある方はぜひご覧ください。<br>
<a href="https://speakerdeck.com/hibariya/code">https://speakerdeck.com/hibariya/code</a></p>
<h2>インストール</h2>
<p>ライブラリーとして使う場合も、前回と同様にgemコマンドでインストールします。</p>
<div class="highlight"><pre>% gem install gtk_advent_calendar
</pre></div>
<p><a href="https://github.com/myokoym/gtk_advent_calendar#installation">README</a>
に記載されている通り、Gemfile等に記述してもOKです。</p>
<h2>サンプルコード</h2>
<p>以下のように使います。</p>
<p><a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/sample/your_calendar.rb">sample/your_calendar.rb</a></p>
<div class="highlight"><pre><span class="c1">#!/usr/bin/env ruby</span>

<span class="nb">require</span> <span class="s2">"gtk_advent_calendar"</span>

<span class="k">class</span> <span class="nc">YourCalendar</span> <span class="o">&lt;</span> <span class="ss">GtkAdventCalendar</span><span class="p">:</span><span class="ss">:Calendar</span>
  <span class="c1"># @params n [Integer] the day between 1 and 25.</span>
  <span class="k">def</span> <span class="nf">action</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="nb">puts</span> <span class="s2">"It's December </span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">."</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">window</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Window</span><span class="o">.</span><span class="n">new</span>
<span class="n">window</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="no">YourCalendar</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
<span class="n">window</span><span class="o">.</span><span class="n">signal_connect</span><span class="p">(</span><span class="s2">"destroy"</span><span class="p">)</span> <span class="k">do</span>
  <span class="no">Gtk</span><span class="o">.</span><span class="n">main_quit</span>
<span class="k">end</span>
<span class="n">window</span><span class="o">.</span><span class="n">show_all</span>
<span class="no">Gtk</span><span class="o">.</span><span class="n">main</span>
</pre></div>
<p>元々はWebページが開かれていましたが、標準出力に日付を表示するようにしています。<br>
show_uriメソッドは使えるので、別のWebページを開くようにすることもできます。</p>
<div class="highlight"><pre>  <span class="k">def</span> <span class="nf">action</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="n">show_uri</span><span class="p">(</span><span class="s2">"http://hoge.fuga/piyo/</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
  <span class="k">end</span>
</pre></div>
<h2>まとめ</h2>
<p>GtkAdventCalendar gem使って、カスタマイズしたアドベントカレンダーアプリを作成しました。</p>
<p>アプリケーションを作成したら、ライブラリーとしても使いやすくすると<br>
使われる機会が増えるかもしれません。（WebページとAPIの関係に似ていますね）<br>
（ライブラリー部分を別のgemに切り出す方が普通かもしれません）</p>]]></content:encoded><dc:date>2013-12-03</dc:date><link>http://myokoym.github.com/entries/20131203/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20131202/a0.html"><title>Tomster氏の5つの魅力</title><description>この記事は
Ember.js Advent Calendar
の2日目です。
僭越ながら、 Ember.js のマスコットキャラクターである
Tomster氏の魅力について考察させていただきたいと思います。
1. 名前の語呂がいい
とても語感がよく、呼びやすい名前です。名前重要。
5拍なのも、日本人にとっては俳句や短歌で馴染みが深くてポイント高いです。
2. 名前を略しやすい
英語圏では、会話やメ...</description><content:encoded><![CDATA[<p>この記事は
<a href="http://www.adventar.org/calendars/94">Ember.js Advent Calendar</a>
の2日目です。</p>
<p>僭越ながら、 Ember.js のマスコットキャラクターである<br>
Tomster氏の魅力について考察させていただきたいと思います。</p>
<h2>1. 名前の語呂がいい</h2>
<p>とても語感がよく、呼びやすい名前です。名前重要。<br>
5拍なのも、日本人にとっては俳句や短歌で馴染みが深くてポイント高いです。</p>
<h2>2. 名前を略しやすい</h2>
<p>英語圏では、会話やメールに本名を使う人はむしろ少なく、<br>
呼びやすい略称などを使う人が多いです。彼もまた、</p>
<p>Tom</p>
<p>という最高に呼びやすい略称を使える可能性を秘めています。<br>
うらやましいですね。</p>
<h2>3. 名前の誤読が少ない</h2>
<p>どう考えても「とむすたー」以外の読み方が思いつきません。<br>
名前の誤読を訂正するのはとても気まずいことなので、<br>
それをしなくていいというのはかなりのアドバンテージです。</p>
<h2>4. 欠番</h2>
<p>ここ日本では、「4」という数字はあまり縁起がよくないので、飛ばします。<br>
ちなみに、 Tomster は種族名だという説がありますが定かではありません。</p>
<h2>5. 名前にスター性がある</h2>
<p>名前に「スター」が入っています。 Tomst<strong>a</strong>r でないのが残念ですが…。</p>
<h2>まとめ</h2>
<p>Tomster という名前について考察しました。<br>
結論としては、とても良く考えられた名前だと思います。変に凝った名前にしなかった<br>
名付け親の方に敬意を表し、本稿を終えさせていただきます。ありがとうございました。</p>
<p>＼Enjoy!／<br>
<img src="http://s.gravatar.com/avatar/0cf15665a9146ba852bf042b0652780a.png" alt="Tomster"></p>]]></content:encoded><dc:date>2013-12-02</dc:date><link>http://myokoym.github.com/entries/20131202/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20131201/a0.html"><title>Ruby/GTK3で作るカレンダーアプリ</title><description>GNOME Advent Calendar 2013
1日目の記事です。
Ruby/GTK3を使って、Advent Calendarっぽいアプリを作成します。
機能

GUIウィンドウを持つ
1日〜25日までのボタンを付ける
日付のボタンをクリックすると、何かが開く


とりあえずWebページ（Wikipedia）にしておく



インストール
RubyGems.orgに公開したので、以下のコマン...</description><content:encoded><![CDATA[<p><a href="http://www.adventar.org/calendars/102">GNOME Advent Calendar 2013</a>
1日目の記事です。</p>
<p>Ruby/GTK3を使って、Advent Calendarっぽいアプリを作成します。</p>
<h2>機能</h2>
<ul>
<li>GUIウィンドウを持つ</li>
<li>1日〜25日までのボタンを付ける</li>
<li>日付のボタンをクリックすると、何かが開く

<ul>
<li>とりあえずWebページ（Wikipedia）にしておく</li>
</ul>
</li>
</ul>
<h2>インストール</h2>
<p>RubyGems.orgに公開したので、以下のコマンドでインストールできます。</p>
<div class="highlight"><pre>% gem install gtk_advent_calendar
</pre></div>
<p>もしインストールできなかったら、
<a href="https://github.com/myokoym/gtk_advent_calendar/issues">issues</a>
か
<a href="https://twitter.com/myokoym">Twitter</a>
でメンションをいただけるとうれしいです。</p>
<h2>起動</h2>
<p>コマンドラインから起動できます。</p>
<div class="highlight"><pre>% gtk_advent_calendar
</pre></div>
<h2>ソースコード</h2>
<p>ソースコードはGitHubに公開してあります。<br>
<a href="https://github.com/myokoym/gtk_advent_calendar">https://github.com/myokoym/gtk_advent_calendar</a></p>
<p>簡単に解説します。</p>
<h3>実行ファイル</h3>
<p>コマンドラインから実行するためのファイルです。</p>
<p><a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/bin/gtk_advent_calendar">https://github.com/myokoym/gtk_advent_calendar/blob/master/bin/gtk_advent_calendar</a></p>
<div class="highlight"><pre><span class="c1">#!/usr/bin/env ruby</span>

<span class="nb">require</span> <span class="s2">"gtk_advent_calendar/command"</span>

<span class="ss">GtkAdventCalendar</span><span class="p">:</span><span class="ss">:Command</span><span class="o">.</span><span class="n">run</span>
</pre></div>
<p>実行ファイルなので、shebangを付けています。<br>
あとは、Commandクラスのrunメソッドを呼び出しているだけです。</p>
<h3>GUIウィンドウ・メインループ</h3>
<p>CommandクラスでGUIウィンドウを作成しています。</p>
<p><a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar/command.rb">https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar/command.rb</a></p>
<div class="highlight"><pre><span class="nb">require</span> <span class="s2">"gtk3"</span>
<span class="nb">require</span> <span class="s2">"gtk_advent_calendar/calendar"</span>

<span class="k">module</span> <span class="nn">GtkAdventCalendar</span>
  <span class="k">class</span> <span class="nc">Command</span>
    <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
      <span class="k">def</span> <span class="nf">run</span>
        <span class="n">window</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Window</span><span class="o">.</span><span class="n">new</span>
        <span class="n">window</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s2">"Advent Calendar"</span>
        <span class="n">window</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="no">Calendar</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
        <span class="n">window</span><span class="o">.</span><span class="n">signal_connect</span><span class="p">(</span><span class="s2">"destroy"</span><span class="p">)</span> <span class="k">do</span>
          <span class="no">Gtk</span><span class="o">.</span><span class="n">main_quit</span>
        <span class="k">end</span>
        <span class="n">window</span><span class="o">.</span><span class="n">show_all</span>
        <span class="no">Gtk</span><span class="o">.</span><span class="n">main</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
<p>主役は<code>window.add(Calendar.new)</code>のCalendarクラスです。<br>
<code>Gtk.main</code>でGUIアプリケーションのメインループに入ります。</p>
<h3>Calendarクラス</h3>
<p>ここでカレンダー本体を作ります。</p>
<p>GTKにはいろいろなウィジェットがありますが、<br>
ここでは基本的なウィジェットであるBoxを多用します。</p>
<p><a href="https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar/calendar.rb">https://github.com/myokoym/gtk_advent_calendar/blob/master/lib/gtk_advent_calendar/calendar.rb</a></p>
<div class="highlight"><pre><span class="nb">require</span> <span class="s2">"gtk3"</span>

<span class="k">module</span> <span class="nn">GtkAdventCalendar</span>
  <span class="k">class</span> <span class="nc">Calendar</span> <span class="o">&lt;</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Frame</span>
    <span class="no">LAST_DAY</span> <span class="o">=</span> <span class="mi">25</span>
    <span class="no">CELL_WIDTH</span> <span class="o">=</span> <span class="mi">40</span>

    <span class="k">def</span> <span class="nf">initialize</span>
      <span class="k">super</span>
      <span class="vi">@day</span> <span class="o">=</span> <span class="mi">1</span>
      <span class="n">add</span><span class="p">(</span><span class="n">month</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">month</span>
      <span class="n">box</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Box</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:vertical</span><span class="p">)</span>
      <span class="n">box</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">days_of_the_week</span><span class="p">)</span>
      <span class="k">while</span> <span class="vi">@day</span> <span class="o">&lt;=</span> <span class="no">LAST_DAY</span> <span class="k">do</span>
        <span class="n">box</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">week</span><span class="p">)</span>
      <span class="k">end</span>
      <span class="n">box</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">days_of_the_week</span>
      <span class="n">box</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Box</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:horizontal</span><span class="p">)</span>
      <span class="sx">%w(Sun Mon Tue Wed Thu Fri Sat)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">day_of_the_week</span><span class="o">|</span>
        <span class="n">label</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Label</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">day_of_the_week</span><span class="si">}</span><span class="s2">."</span><span class="p">)</span>
        <span class="n">label</span><span class="o">.</span><span class="n">width_request</span> <span class="o">=</span> <span class="no">CELL_WIDTH</span>
        <span class="n">box</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">label</span><span class="p">)</span>
      <span class="k">end</span>
      <span class="n">box</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">week</span>
      <span class="n">box</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Box</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:horizontal</span><span class="p">)</span>
      <span class="mi">7</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
        <span class="k">break</span> <span class="k">if</span> <span class="vi">@day</span> <span class="o">&gt;</span> <span class="no">LAST_DAY</span>
        <span class="n">box</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">day</span><span class="p">(</span><span class="vi">@day</span><span class="p">))</span>
        <span class="vi">@day</span> <span class="o">+=</span> <span class="mi">1</span>
      <span class="k">end</span>
      <span class="n">box</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">day</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
      <span class="n">button</span> <span class="o">=</span> <span class="ss">Gtk</span><span class="p">:</span><span class="ss">:Button</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:label</span> <span class="o">=&gt;</span> <span class="n">n</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
      <span class="n">button</span><span class="o">.</span><span class="n">width_request</span> <span class="o">=</span> <span class="no">CELL_WIDTH</span>
      <span class="n">button</span><span class="o">.</span><span class="n">height_request</span> <span class="o">=</span> <span class="no">CELL_WIDTH</span>
      <span class="n">button</span><span class="o">.</span><span class="n">signal_connect</span><span class="p">(</span><span class="s2">"clicked"</span><span class="p">)</span> <span class="k">do</span>
        <span class="n">show_uri</span><span class="p">(</span><span class="s2">"http://en.wikipedia.org/wiki/December_</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
      <span class="k">end</span>
      <span class="n">button</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">show_uri</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
      <span class="k">case</span> <span class="no">RUBY_PLATFORM</span>
      <span class="k">when</span> <span class="sr">/darwin/</span>
        <span class="nb">system</span><span class="p">(</span><span class="s2">"open"</span><span class="p">,</span> <span class="n">uri</span><span class="p">)</span>
      <span class="k">when</span> <span class="sr">/mswin|mingw|cygwin|bccwin/</span>
        <span class="nb">system</span><span class="p">(</span><span class="s2">"start"</span><span class="p">,</span> <span class="n">uri</span><span class="p">)</span>
      <span class="k">else</span>
        <span class="k">if</span> <span class="no">Gtk</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:show_uri</span><span class="p">)</span>
          <span class="no">Gtk</span><span class="o">.</span><span class="n">show_uri</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
        <span class="k">else</span>
          <span class="nb">system</span><span class="p">(</span><span class="s2">"firefox"</span><span class="p">,</span> <span class="n">uri</span><span class="p">)</span>
        <span class="k">end</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
<p>詳しい解説は省略するので、何かあればコメントか
<a href="https://twitter.com/myokoym">Twitter</a>
でメンションをください。</p>
<h2>まとめ</h2>
<p>Ruby/GTK3を使ってカレンダーアプリを作成しました。<br>
これを応用すれば、ランチャーアプリなども簡単に作れると思います。</p>
<p>もしRuby/GTK3に興味を持たれた方がいれば、<br>
<a href="http://ruby-gnome2.sourceforge.jp/ja/">プロジェクトページ</a>
や
<a href="https://lists.sourceforge.net/lists/listinfo/ruby-gnome2-devel-ja">メーリングリスト</a>
も参照してみてください。</p>]]></content:encoded><dc:date>2013-12-01</dc:date><link>http://myokoym.github.com/entries/20131201/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20131030/a0.html"><title>Ruby/C++用ゲーム開発ライブラリGosuのRubyチュートリアルを日本語訳しました</title><description>Gosuとは、RubyとC++に対応した2Dゲーム開発ライブラリです。
ruby-gnome2-devel-enというMLに使っている人がいて存在を知りました。
http://www.libgosu.org/
インストール方法はWikiのサイドバーのGetting Startedです。
https://github.com/jlnr/gosu/wiki
Rubyに対応したゲーム開発ライブラリの中で...</description><content:encoded><![CDATA[<p>Gosuとは、RubyとC++に対応した2Dゲーム開発ライブラリです。<br>
ruby-gnome2-devel-enというMLに使っている人がいて存在を知りました。</p>
<p><a href="http://www.libgosu.org/">http://www.libgosu.org/</a></p>
<p>インストール方法はWikiのサイドバーのGetting Startedです。</p>
<p><a href="https://github.com/jlnr/gosu/wiki">https://github.com/jlnr/gosu/wiki</a></p>
<p>Rubyに対応したゲーム開発ライブラリの中では最有力だと思っています。</p>
<ul>
<li>メンテナンスされている

<ul>
<li>コピーライトは2001-2013</li>
<li>作者の方にメールしたら4時間で返事が来た</li>
</ul>
</li>
<li>オープンソース

<ul>
<li>
<a href="https://github.com/jlnr/gosu/">GitHub</a>にホスティング</li>
<li>MITライセンス</li>
</ul>
</li>
<li>マルチプラットフォーム

<ul>
<li>Mac OS X</li>
<li>Windows（Ruby2.0未対応）</li>
<li>Linux</li>
<li>参考：C++版はiOSにも対応</li>
</ul>
</li>
</ul>
<p>とてもよさげなのですが、なぜか日本語の情報がほとんどなかったので、<br>
きちんと理解するためにチュートリアルを日本語に訳してみました。</p>
<p><a href="https://gist.github.com/myokoym/7148859#file-gosu-ruby-tutorial-japanese-md">https://gist.github.com/myokoym/7148859#file-gosu-ruby-tutorial-japanese-md</a></p>
<p>基本はわかってきたので、あとは実際にアプリケーションを開発しながら<br>
都度アウトプットなりコントリビュートなりしていきたいと思っています。</p>]]></content:encoded><dc:date>2013-10-30</dc:date><link>http://myokoym.github.com/entries/20131030/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20131029/a0.html"><title>mireru 0.1.7 hexdump対応</title><description>今日は肉の日ですね。マルチタイプ＆キーボードフレンドリーな
ファイルビューアmireruの0.1.7をリリースしました。
http://myokoym.github.io/mireru/ja/
今までは、対応していない拡張子だった場合はSorry画像を出していましたが、
今回のリリースからは先頭20KBの16進数のバイナリを表示するようにしました。
新しく依存するようになったgemはhexdump...</description><content:encoded><![CDATA[<p>今日は肉の日ですね。マルチタイプ＆キーボードフレンドリーな<br>
ファイルビューアmireruの0.1.7をリリースしました。</p>
<p><a href="http://myokoym.github.io/mireru/ja/">http://myokoym.github.io/mireru/ja/</a></p>
<p>今までは、対応していない拡張子だった場合はSorry画像を出していましたが、<br>
今回のリリースからは先頭20KBの16進数のバイナリを表示するようにしました。</p>
<p>新しく依存するようになったgemはhexdumpです。お世話になります。<br>
<a href="https://github.com/postmodern/hexdump">https://github.com/postmodern/hexdump</a></p>
<p>次のリリースでは、もっと機能追加（新しい拡張子への対応など）<br>
しやすくしたいと思っています。</p>]]></content:encoded><dc:date>2013-10-29</dc:date><link>http://myokoym.github.com/entries/20131029/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20131009/a0.html"><title>myokoym.netをMiddlemanでリニューアルしました</title><description>@tricknotes 先輩がおすすめしていた
Middleman
を使ってみたかったので、
ちょうどレガシーだった myokoym.net
をリニューアルしました。
ビフォー・アフター
古き良きタグ打ち感漂う旧ページ

シンプル過ぎるほどシンプルです。これはこれで嫌いではないのですが、
間違えてとなりのリンクをクリックしてしまうことが多いため、
デザインだけでなく実用性の面でも改善する必要があり...</description><content:encoded><![CDATA[<p><a href="http://tricknotes.hateblo.jp/">@tricknotes</a> 先輩がおすすめしていた
<a href="http://middleman-guides.e2esound.com/">Middleman</a>
を使ってみたかったので、<br>
ちょうどレガシーだった <a href="http://myokoym.net">myokoym.net</a>
をリニューアルしました。</p>
<h2>ビフォー・アフター</h2>
<h3>古き良きタグ打ち感漂う旧ページ</h3>
<p><img src="/images/myokoym.net.old.png" alt="myokoym.net.old"></p>
<p>シンプル過ぎるほどシンプルです。これはこれで嫌いではないのですが、<br>
間違えてとなりのリンクをクリックしてしまうことが多いため、<br>
デザインだけでなく実用性の面でも改善する必要がありました。</p>
<h3>モダンな雰囲気を醸し出す新ページ</h3>
<p><img src="/images/myokoym.net.png" alt="myokoym.net"></p>
<p>いい機会なので、デザイン性と実用性の両面での改善を目指しました。<br>
（スクリーンショットは、一番うまく表示されたWindowsのFirefox 24.0で取得しました）</p>
<p>生のCSSは書く気にならなかったのですが、Middlemanのおかげで<br>
簡単にSCSSを使うことができたのが大きく、ほぼ想定通り実装できました。</p>
<h3>タブ形式のデザインを採用</h3>
<p>文字やクリック領域を大きくしつつ、
スクロールやページ遷移のストレスを減らすため、<br>
タブ形式のデザインを採用しました。</p>
<p>JavaScriptをまったく使わずにCSSのみで実装しています。<br>
以下のページを参考にさせていただきました。</p>
<p><a href="http://columegg.com/?p=1064">jQueryを使わずCSSだけで出来るタブコンテンツ【レスポンシブ対応】 | コロンブスの卵</a></p>
<h3>スマホは2/5タブのみ対応</h3>
<p>スマホ（愛機<a href="http://www.kyocera.co.jp/prdct/telecom/consumer/l01/">京セラURBANO</a>）
で確認したところ、タブが２つしか表示されなかったので、<br>
左右にスクロールできないか検討中です。
ブラウザによっては、タブもあやしい動きをします。</p>
<h3>ソースコード</h3>
<p>CSSはもっと修正しやすく書けるような気がしています。</p>
<p><a href="https://github.com/myokoym/myokoym.net">https://github.com/myokoym/myokoym.net</a></p>
<p>ちなみに、現在のデプロイ手順は <code>middleman build</code> からの <code>scp -r</code>
からの <code>cp -rp</code> です。</p>]]></content:encoded><dc:date>2013-10-09</dc:date><link>http://myokoym.github.com/entries/20131009/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130929/a0.html"><title>mireru 0.1.6 動画サポート</title><description>今日は肉の日ですね。mireru 0.1.6 をリリースしました！
今回の目玉は、動画ファイルをサポートしたことです。

Linuxはもちろん、Windowsでも見れます！（Ruby-GNOME2プロジェクトのおかげです！）

（OS Xはたぶん動かないので、ちょっと試してダメだったらすぐに諦めて教えてください！）
インストール
gem install mireru

開発版を使いたい場合:
gi...</description><content:encoded><![CDATA[<p>今日は肉の日ですね。mireru 0.1.6 をリリースしました！</p>
<p>今回の目玉は、動画ファイルをサポートしたことです。
<br>
Linuxはもちろん、Windowsでも見れます！（Ruby-GNOME2プロジェクトのおかげです！）
<br>
（OS Xはたぶん動かないので、ちょっと試してダメだったらすぐに諦めて教えてください！）</p>
<h2>インストール</h2>
<div class="highlight"><pre>gem install mireru
</pre></div>
<p>開発版を使いたい場合:</p>
<div class="highlight"><pre>git clone https://github.com/myokoym/mireru
cd mireru
rake install
</pre></div>
<h2>使い方</h2>
<p>一番簡単な使い方を紹介します。</p>
<ol>
<li>シェルを起動（bashやcmd.exeなど）</li>
<li>見たいファイルがあるディレクトリへ移動</li>
<li>mireruコマンドを実行</li>
<li>「n」キーを押して見たいファイルを探す</li>
<li>「q」キーを押して終了する</li>
</ol>
<p>詳しくはReadmeをご覧ください。
<br>
<a href="https://github.com/myokoym/mireru#readme">https://github.com/myokoym/mireru#readme</a></p>
<p>フィードバックお待ちしています！
<br>
<a href="https://github.com/myokoym/mireru/issues">https://github.com/myokoym/mireru/issues</a></p>]]></content:encoded><dc:date>2013-09-29</dc:date><link>http://myokoym.github.com/entries/20130929/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130923/a0.html"><title>北海道社団戦二部2013</title><description>北海道将棋社会人団体リーグ戦二部リーグで優勝しました。
北海道社団戦とは？ - 札幌将棋情報のブログ - Yahoo!ブログ
北海道将棋社会人団体リーグ戦のページ
北海道社団戦　２部　結果 - 札幌将棋情報のブログ - Yahoo!ブログ
朝っぱらから - 札幌将棋情報のブログ - Yahoo!ブログ
感想
チーム
チームとしては、二度の3-2勝ちが大きかった。私もMVPは師匠だと思います。
来年...</description><content:encoded><![CDATA[<p>北海道将棋社会人団体リーグ戦二部リーグで優勝しました。</p>
<p><a href="http://blogs.yahoo.co.jp/sapporoshogijoho/4938354.html">北海道社団戦とは？ - 札幌将棋情報のブログ - Yahoo!ブログ</a></p>
<p><a href="http://www.ne.jp/asahi/golconde/shogi/hokkaido_shadansen.html">北海道将棋社会人団体リーグ戦のページ</a></p>
<p><a href="http://blogs.yahoo.co.jp/sapporoshogijoho/11519723.html">北海道社団戦　２部　結果 - 札幌将棋情報のブログ - Yahoo!ブログ</a></p>
<p><a href="http://blogs.yahoo.co.jp/sapporoshogijoho/11520936.html">朝っぱらから - 札幌将棋情報のブログ - Yahoo!ブログ</a></p>
<h2>感想</h2>
<h3>チーム</h3>
<p>チームとしては、二度の3-2勝ちが大きかった。私もMVPは師匠だと思います。</p>
<p>来年は一部なので、数年前の悲劇を繰り返さないために僕達にできることをやろう。
<br>
手始めに、出場を渋っていた先輩を<del>脅迫</del>半ば強引に説得した。（主に師匠が）</p>
<h3>個人</h3>
<p>個人的には、一般的な善悪にとらわれ過ぎずに棋風に合った指し手を選べたことと、
<br>
団体戦だからと消極的にならずに行くところは行けたのが良かった。</p>
<p>ひとつ気づいたのが、昔に比べて序盤のわからない局面で時間を使わなくなった。
<br>
ある程度読んだらえいやで指す感じ。善悪は別として、年を取ったなあと思った。</p>
<h3>全勝賞</h3>
<p>全勝賞として松田圭市さんの詰将棋集をもらって、帰り際にサインをいただいた。</p>
<p><a href="http://www.amazon.co.jp/%E8%A9%B0%E5%B0%86%E6%A3%8B%E4%BD%9C%E5%93%81%E9%9B%86%E3%80%8C%E3%81%99%E3%81%AA%E3%81%A9%E3%81%91%E3%81%84%E3%80%8D-%E6%9D%BE%E7%94%B0%E5%9C%AD%E5%B8%82/dp/4863810490">Amazon.co.jp： 詰将棋作品集「すなどけい」: 松田圭市: 本</a></p>
<p>来年までに一周するのが目標。けっこう難しいですが、
<br>
コラムもあって読み物としてもおもしろいので、おすすめです。</p>]]></content:encoded><dc:date>2013-09-23</dc:date><link>http://myokoym.github.com/entries/20130923/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130909/a0.html"><title>Ruby-GNOME2のクロスコンパイルに必要なパッケージまとめ</title><description>Ubuntu 13.04をクリーンインストールしたので、この機会にまとめておく。
リリースの手伝いまではいかなくても、動作確認くらいはできるようにしておきたい。</description><content:encoded><![CDATA[<p>Ubuntu 13.04をクリーンインストールしたので、この機会にまとめておく。</p>
<script src="https://gist.github.com/myokoym/6497033.js"></script><p>リリースの手伝いまではいかなくても、動作確認くらいはできるようにしておきたい。</p>]]></content:encoded><dc:date>2013-09-09</dc:date><link>http://myokoym.github.com/entries/20130909/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130907/a0.html"><title>mireru 動画サポート</title><description>Ruby/ClutterGTKとRuby/ClutterGStreamerを使って動画を見れるようにした。
https://github.com/myokoym/mireru/commit/9808ec40bb88304fa1e8b2ffc039c05ffb90e739
https://github.com/ruby-gnome2/ruby-gnome2/tree/master/clutter-g...</description><content:encoded><![CDATA[<p>Ruby/ClutterGTKとRuby/ClutterGStreamerを使って動画を見れるようにした。</p>
<p><a href="https://github.com/myokoym/mireru/commit/9808ec40bb88304fa1e8b2ffc039c05ffb90e739">https://github.com/myokoym/mireru/commit/9808ec40bb88304fa1e8b2ffc039c05ffb90e739</a></p>
<p><a href="https://github.com/ruby-gnome2/ruby-gnome2/tree/master/clutter-gstreamer">https://github.com/ruby-gnome2/ruby-gnome2/tree/master/clutter-gstreamer</a></p>
<h2>TODO</h2>
<ul>
<li>最初に読み込んだ動画ファイルしか表示されない。音は出る。

<ul>
<li>動画(OK) -&gt; 動画(NG) -&gt; 動画(NG)</li>
<li>画像 -&gt; 動画(OK) -&gt; 動画(NG) -&gt; 動画(NG)</li>
<li>画像 -&gt; 動画(OK) -&gt; 画像 -&gt; 動画(NG) -&gt; 動画(NG)</li>
</ul>
</li>
<li>サイズ調整</li>
<li>キーバインド追加

<ul>
<li>一時停止</li>
<li>早送り</li>
<li>リサイズ</li>
<li>など。</li>
</ul>
</li>
</ul>]]></content:encoded><dc:date>2013-09-07</dc:date><link>http://myokoym.github.com/entries/20130907/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130901/a0.html"><title>Androidエミュレータでバックグラウンドプロセスを残さない方法</title><description>以下の手順で設定を変更します。

アプリ一覧より、Dev Settings (Developer options) を選択
下の方にスクロール（APPSの項）
Background process limit を選択
No background processes を選択

参考
Ruboto（Ruby）によるAndroidアプリ開発の覚え書き。</description><content:encoded><![CDATA[<p>以下の手順で設定を変更します。</p>
<ol>
<li>アプリ一覧より、Dev Settings (Developer options) を選択</li>
<li>下の方にスクロール（APPSの項）</li>
<li>Background process limit を選択</li>
<li>No background processes を選択</li>
</ol>
<h2>参考</h2>
<p><a href="https://gist.github.com/myokoym/6402909">Ruboto（Ruby）によるAndroidアプリ開発の覚え書き。</a></p>]]></content:encoded><dc:date>2013-09-01</dc:date><link>http://myokoym.github.com/entries/20130901/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130829/a0.html"><title>今月の肉リリース（2013-08-29）</title><description>目玉はmireruのざっくりサムネイル機能。
mireru 0.1.5
キーボードで操作できるファイルビューアです。

https://github.com/myokoym/mireru
主な変更点
予告通り。

mireru 0.1.5 予告 - my_letter
shogi-ruby 0.0.6
Rubyのみで書かれた将棋ライブラリです。

https://github.com/myokoy...</description><content:encoded><![CDATA[<p>目玉はmireruのざっくりサムネイル機能。</p>
<h2>mireru 0.1.5</h2>
<p>キーボードで操作できるファイルビューアです。
<br>
<a href="https://github.com/myokoym/mireru">https://github.com/myokoym/mireru</a></p>
<h3>主な変更点</h3>
<p>予告通り。
<br>
<a href="/entries/20130828/a0.html">mireru 0.1.5 予告 - my_letter</a></p>
<h2>shogi-ruby 0.0.6</h2>
<p>Rubyのみで書かれた将棋ライブラリです。
<br>
<a href="https://github.com/myokoym/shogi-ruby">https://github.com/myokoym/shogi-ruby</a></p>
<h3>主な変更点</h3>
<p>開発中のGtkShogiViewが進まなかったので、こちらもあまり進展なし。</p>
<ul>
<li>Board#at を追加</li>
</ul>
<h2>Ruby/OSL 0.0.2</h2>
<p>OpenShogiLibのRubyバインディングです。
<br>
<a href="https://github.com/myokoym/ruby-osl">https://github.com/myokoym/ruby-osl</a></p>
<h3>主な変更点</h3>
<p>osl::Pieceをサポートした。が、サンプルを作成し忘れたので利点をうまく説明できない。</p>
<ul>
<li>SimpleState#pieceAt (= #at) を追加</li>
<li>osl::Piece をサポート</li>
<li>NumEffectStateクラスをSimpleStateのサブクラスにした</li>
<li>フォーマット判定を改善（C++の例外がそのままRubyに返らないよう修正）</li>
<li>フォーマットが不正の場合、falseではなくnilを返すよう修正</li>
</ul>
<h2>以上三本。</h2>
<p>今月から肉リリースに挑戦することにしました。毎月一本以上はリリースします。</p>
<p>全てメジャーバージョン番号が0であり、まだ実験的なので使えとは言いませんが、
<br>
万が一使っていてもやっときたらぜひフィードバックをください。</p>]]></content:encoded><dc:date>2013-08-29</dc:date><link>http://myokoym.github.com/entries/20130829/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130828/a0.html"><title>mireru 0.1.5 予告</title><description>明日にくリリース予定。
https://github.com/myokoym/mireru
主な変更点

デフォルトサイズをオリジナルサイズに変更
サムネイル対応

デフォルトサイズをオリジナルサイズに変更
画像のオリジナルサイズがウィンドウサイズよりも小さければ、

オリジナルサイズで表示することにした。
（fキーを押せばウィンドウサイズにフィットする）
画像のオリジナルサイズがウィンドウサイズ...</description><content:encoded><![CDATA[<p>明日にくリリース予定。</p>
<p><a href="https://github.com/myokoym/mireru">https://github.com/myokoym/mireru</a></p>
<h2>主な変更点</h2>
<ul>
<li>デフォルトサイズをオリジナルサイズに変更</li>
<li>サムネイル対応</li>
</ul>
<h3>デフォルトサイズをオリジナルサイズに変更</h3>
<p>画像のオリジナルサイズがウィンドウサイズよりも小さければ、
<br>
オリジナルサイズで表示することにした。
（fキーを押せばウィンドウサイズにフィットする）</p>
<p>画像のオリジナルサイズがウィンドウサイズよりも大きければ、
<br>
ウィンドウサイズに縮小して表示する。（今までと同じ）</p>
<p>統一するべきか迷ったけど、この組み合わせが一番使いやすそう。</p>
<h3>サムネイル対応</h3>
<p>ずっと欲しかったので、とりあえずざっくり作った。</p>
<p>縦ボックスに横ボックスを詰めてるだけなので縦線がずれる。
<br>
テーブル使って整列しようか考え中。</p>
<p>ああ、それよりもクリックして飛べるようにしたい。</p>]]></content:encoded><dc:date>2013-08-28</dc:date><link>http://myokoym.github.com/entries/20130828/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130825/a0.html"><title>Rubyとrcairoで将棋駒を描画</title><description>出来上がりはこんな感じ。一文字と二文字に両対応。


ソースコード（Gist）
プログラム内で描画するか、事前に画像を作成しておくかは難しいところ。
参考
Rubyist Magazine - cairo: 2 次元画像描画ライブラリ

http://jp.rubyist.net/magazine/?0019-cairo
Ruby/GTK2 sample

https://github.com/r...</description><content:encoded><![CDATA[<p>出来上がりはこんな感じ。一文字と二文字に両対応。</p>
<p><img src="/images/fu1-20130825_01.png" alt="fu1">
<img src="/images/fu2-20130825_02.png" alt="fu2"></p>
<h3>ソースコード（Gist）</h3>
<script src="https://gist.github.com/myokoym/6332512.js"></script><p>プログラム内で描画するか、事前に画像を作成しておくかは難しいところ。</p>
<h2>参考</h2>
<p>Rubyist Magazine - cairo: 2 次元画像描画ライブラリ
<br>
<a href="http://jp.rubyist.net/magazine/?0019-cairo">http://jp.rubyist.net/magazine/?0019-cairo</a></p>
<p>Ruby/GTK2 sample
<br>
<a href="https://github.com/ruby-gnome2/ruby-gnome2/tree/master/gtk2/sample/gtk-demo">https://github.com/ruby-gnome2/ruby-gnome2/tree/master/gtk2/sample/gtk-demo</a></p>]]></content:encoded><dc:date>2013-08-25</dc:date><link>http://myokoym.github.com/entries/20130825/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130822/a0.html"><title>初めてのアドオン (Firefox 23)</title><description>初めてFirefoxのアドオンを作った。
https://addons.mozilla.org/ja/firefox/addon/quick-rurema-search/
https://github.com/myokoym/quick-rurema-search
Add-on SDKを使って雛形を作った後、
サンプルを組み合わせて少し改造しただけ。

最初の段（最低限動くものが作れるまでの労力）...</description><content:encoded><![CDATA[<p>初めてFirefoxのアドオンを作った。</p>
<p><a href="https://addons.mozilla.org/ja/firefox/addon/quick-rurema-search/">https://addons.mozilla.org/ja/firefox/addon/quick-rurema-search/</a></p>
<p><a href="https://github.com/myokoym/quick-rurema-search">https://github.com/myokoym/quick-rurema-search</a></p>
<p>Add-on SDKを使って雛形を作った後、
サンプルを組み合わせて少し改造しただけ。
<br>
最初の段（最低限動くものが作れるまでの労力）が低いのは、とてもよいと思う。</p>
<p>作成手順は、</p>
<p><a href="http://vividcode.hatenablog.com/entry/how-to-develop-firefox-extension">Firefox 拡張の作り方 (2013 年版) - ひだまりソケットは壊れない</a></p>
<p>を参考にしながら、Add-on SDKをダウンロード</p>
<p><a href="https://addons.mozilla.org/ja/developers/builder">Builder と SDK :: 開発者センター :: Add-ons for Firefox</a></p>
<p>して、</p>
<p><a href="https://dev.mozilla.jp/addon-sdk-docs/dev-guide/tutorials/installation.html">インストール - Add-on SDK Documentation</a></p>
<p>して、</p>
<p><a href="https://dev.mozilla.jp/addon-sdk-docs/dev-guide/tutorials/getting-started-with-cfx.html">cfx 入門 - Add-on SDK Documentation</a></p>
<p>をやって、</p>
<p><a href="https://dev.mozilla.jp/addon-sdk-docs/dev-guide/tutorials/add-a-context-menu-item.html">コンテキストメニューアイテムの追加 - Add-on SDK Documentation</a></p>
<p>と</p>
<p><a href="https://dev.mozilla.jp/addon-sdk-docs/dev-guide/tutorials/open-a-web-page.html">Web ページを開く - Add-on SDK Documentation</a></p>
<p>を組み合わせたらできた。
簡単だったのは、るりまサーチのURLの設計のおかげでもある。</p>
<p><a href="http://magazine.rubyist.net/?0031-RuremaSearch">Rubyist Magazine - るりまサーチの作り方 - Ruby 1.9 で groonga 使って全文検索</a></p>
<p>ただ、Add-on SDK 1.14 で普通にビルドすると対象バージョンが19.0以降になる
理由がわからなかった。ESR（法人向け延長サポート版）は今年の12月まで17.0系
がサポートされているので、気になっている。</p>
<p><a href="http://www.mozilla.jp/business/downloads/">Firefox/Thunderbird 法人向け延長サポート版 (ESR) のダウンロード</a></p>
<p>互換性を無視する設定にしてインストールしたら動いたけど、
できれば普通に入れられるようにしたい。</p>]]></content:encoded><dc:date>2013-08-22</dc:date><link>http://myokoym.github.com/entries/20130822/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130819/a1.html"><title>
www.ruby-lang.org 新MLリンク追加パッチ</title><description>メーリングリストの登録方法が変更になっていて、
Mail Delivery Subsystemさんのお世話になった。
まだドキュメントが更新されていなかったので、
pull requestを送らせてもらった。
修正する度胸はなかったので、注釈を追加しただけ。
英語だけ送ったけど、日本語も送ってしまえばよかったか。</description><content:encoded><![CDATA[<p>メーリングリストの登録方法が変更になっていて、
Mail Delivery Subsystemさんのお世話になった。</p>
<p>まだドキュメントが更新されていなかったので、
pull requestを送らせてもらった。</p>
<p>修正する度胸はなかったので、注釈を追加しただけ。</p>
<p>英語だけ送ったけど、日本語も送ってしまえばよかったか。</p>]]></content:encoded><dc:date>2013-08-19</dc:date><link>http://myokoym.github.com/entries/20130819/a1.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130819/a0.html"><title>Ruby/OSL C++クラスをRubyから</title><description>C++のクラスをRubyから使えるようになった。
最初はallocからの placement new を使っていたけど、
osl::state::NumEffectStateクラスに「引数の数が合わない。」
とか言われたので、allocしないでいきなりnewするようにした。
でもところどころメモリ解放できてないっぽい。
が、基本機能の実装を優先する。

普通のマシンで普通に使う分には全く問題ない（...</description><content:encoded><![CDATA[<p>C++のクラスをRubyから使えるようになった。</p>
<p>最初はallocからの placement new を使っていたけど、</p>
<p>osl::state::NumEffectStateクラスに「引数の数が合わない。」</p>
<p>とか言われたので、allocしないでいきなりnewするようにした。</p>
<p>でもところどころメモリ解放できてないっぽい。
が、基本機能の実装を優先する。</p>
<ul>
<li>普通のマシンで普通に使う分には全く問題ない（テストして確認）</li>
<li>ソフトウェア開発では、メモリ不足よりもモチベーション不足のが危険</li>
</ul>
<p>とことで。</p>
]]></content:encoded><dc:date>2013-08-19</dc:date><link>http://myokoym.github.com/entries/20130819/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130810/a0.html"><title>tDiary 4.0.0 をサブURIで動かそうとした</title><description>tDiary 4.0.0 を Apache + Passenger + Rack + サブURI で動かそうとしたけどだめだった。
tDiaryのインストール

gem install tdiary
tdiary version


tdiary 4.0.0


tdiary new hogediary


cd hogediary


bundle exec tdiary serverからの19...</description><content:encoded><![CDATA[<p>tDiary 4.0.0 を Apache + Passenger + Rack + サブURI で動かそうとしたけどだめだった。</p>
<h2>tDiaryのインストール</h2>
<ul>
<li>gem install tdiary</li>
<li>tdiary version

<ul>
<li>tdiary 4.0.0</li>
</ul>
</li>
<li>tdiary new hogediary

<ul>
<li>cd hogediary</li>
</ul>
</li>
<li>bundle exec tdiary serverからの19292番ポートはOK</li>
<li>bundle exec rackupからの9292番ポートもOK

<ul>
<li>単体なら簡単に動く！</li>
</ul>
</li>
</ul>
<h2>Apache (httpd) の設定</h2>
<p>いつもSinatraアプリを追加しているのと同じようにしてみる。</p>
<ul>
<li>httpdのconfにRackBaseURIを追加</li>
<li>httpdのホームディレクトリにシンボリックリンクを追加

<ul>
<li>hogediary/publicを指定</li>
</ul>
</li>
<li>httpdを再起動</li>
</ul>
<h2>ブラウザからアクセス</h2>
<ul>
<li>Not Found: だけのHTMLが表示される

<ul>
<li>hogediary/tmp/restart.txtを作成しても変わらず</li>
<li>Apacheの404じゃなく、Rackの404？</li>
<li>config.ruは動いている

<ul>
<li>
<code>touch hoge</code> して確認</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>まとめ</h2>
<ul>
<li>Webアプリ力が足りない</li>
<li>本業ではないので、気が向いたら再チャレンジする</li>
</ul>]]></content:encoded><dc:date>2013-08-10</dc:date><link>http://myokoym.github.com/entries/20130810/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130808/a2.html"><title>Ruby-GNOME2 Project Website</title><description>
FrontPage更新


ClutterとWebKitGTKを追記
GTK+ 3対応について記載
ruby1.8-devを削除



http://ruby-gnome2.sourceforge.jp/ja/


gnome2でググると最初に来る


</description><content:encoded><![CDATA[<ul>
<li>FrontPage更新

<ul>
<li>ClutterとWebKitGTKを追記</li>
<li>GTK+ 3対応について記載</li>
<li>ruby1.8-devを削除</li>
</ul>
</li>
<li>
<a href="http://ruby-gnome2.sourceforge.jp/ja/">http://ruby-gnome2.sourceforge.jp/ja/</a>

<ul>
<li>gnome2でググると最初に来る</li>
</ul>
</li>
</ul>]]></content:encoded><dc:date>2013-08-08</dc:date><link>http://myokoym.github.com/entries/20130808/a2.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130808/a1.html"><title>Ruby-GNOME2 クロスコンパイル日記</title><description>今日はpangoを進めた。

harfbuzz-0.9.17


bits/predefs.h


libc6-dev-amd64


gnu/stubs-32.h


libc6-dev（ただしi386-linux-gnuディレクトリ）
/usr/include/i386-linux-gnu/gnu/stubs-32.h
harfbuzzは/usr/include/gnuしか見てくれない
とりあ...</description><content:encoded><![CDATA[<p>今日はpangoを進めた。</p>
<ul>
<li>harfbuzz-0.9.17

<ul>
<li>bits/predefs.h

<ul>
<li>libc6-dev-amd64</li>
</ul>
</li>
<li>gnu/stubs-32.h

<ul>
<li>libc6-dev（ただしi386-linux-gnuディレクトリ）</li>
<li>/usr/include/i386-linux-gnu/gnu/stubs-32.h</li>
<li>harfbuzzは/usr/include/gnuしか見てくれない</li>
<li>とりあえずシンボリックリンク張った</li>
</ul>
</li>
<li>align.h:30:102: error: 'wcscpy' was not declared in this scope

<ul>
<li>つづく。</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content:encoded><dc:date>2013-08-08</dc:date><link>http://myokoym.github.com/entries/20130808/a1.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130808/a0.html"><title>ヘッダー探しツール</title><description>
packages.ubuntu.com


http://packages.ubuntu.com/
http://gihyo.jp/admin/serial/01/ubuntu-recipe/0016


apt-file


http://d.hatena.ne.jp/rx7/20080830/p1
http://d.hatena.ne.jp/rubikitch/20080406/120742...</description><content:encoded><![CDATA[<ul>
<li>packages.ubuntu.com

<ul>
<li><a href="http://packages.ubuntu.com/">http://packages.ubuntu.com/</a></li>
<li><a href="http://gihyo.jp/admin/serial/01/ubuntu-recipe/0016">http://gihyo.jp/admin/serial/01/ubuntu-recipe/0016</a></li>
</ul>
</li>
<li>apt-file

<ul>
<li><a href="http://d.hatena.ne.jp/rx7/20080830/p1">http://d.hatena.ne.jp/rx7/20080830/p1</a></li>
<li><a href="http://d.hatena.ne.jp/rubikitch/20080406/1207420372">http://d.hatena.ne.jp/rubikitch/20080406/1207420372</a></li>
<li>e.g.) apt-file search hoge.h</li>
</ul>
</li>
</ul>
]]></content:encoded><dc:date>2013-08-08</dc:date><link>http://myokoym.github.com/entries/20130808/a0.html</link><author>myokoym</author></item></rdf:RDF>