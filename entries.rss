<?xml version="1.0" encoding="UTF-8"?><rdf:RDF xmlns="http://purl.org/rss/1.0/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xml:lang="ja"><channel rdf:about="http://myokoym.github.com/"><title>my_letter</title><link>http://myokoym.github.com/</link><dc:date>2013-08-10</dc:date><description>my_letter</description><items><rdf:Seq><rdf:li rdf:resource="http://myokoym.github.com/entries/20130810/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130808/a2.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130808/a1.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130808/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130807/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130612/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130501/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130329/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130328/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130312/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130310/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130309/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130302/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130223/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130216/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20130127/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20121125/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20121123/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20121009/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20121006/a0.html"/><rdf:li rdf:resource="http://myokoym.github.com/entries/20120929/a0.html"/></rdf:Seq></items></channel><item about="http://myokoym.github.com/entries/20130810/a0.html"><title>tDiary 4.0.0 をサブURIで動かそうとした</title><description>tDiary 4.0.0 を Apache + Passenger + Rack + サブURI で動かそうとしたけどだめだった。
tDiaryのインストール

gem install tdiary
tdiary version


tdiary 4.0.0


tdiary new hogediary


cd hogediary


bundle exec tdiary serverからの19...</description><content:encoded><![CDATA[<p>tDiary 4.0.0 を Apache + Passenger + Rack + サブURI で動かそうとしたけどだめだった。</p>
<h2>tDiaryのインストール</h2>
<ul>
<li>gem install tdiary</li>
<li>tdiary version

<ul>
<li>tdiary 4.0.0</li>
</ul>
</li>
<li>tdiary new hogediary

<ul>
<li>cd hogediary</li>
</ul>
</li>
<li>bundle exec tdiary serverからの19292番ポートはOK</li>
<li>bundle exec rackupからの9292番ポートもOK

<ul>
<li>単体なら簡単に動く！</li>
</ul>
</li>
</ul>
<h2>Apache (httpd) の設定</h2>
<p>いつもSinatraアプリを追加しているのと同じようにしてみる。</p>
<ul>
<li>httpdのconfにRackBaseURIを追加</li>
<li>httpdのホームディレクトリにシンボリックリンクを追加

<ul>
<li>hogediary/publicを指定</li>
</ul>
</li>
<li>httpdを再起動</li>
</ul>
<h2>ブラウザからアクセス</h2>
<ul>
<li>Not Found: だけのHTMLが表示される

<ul>
<li>hogediary/tmp/restart.txtを作成しても変わらず</li>
<li>Apacheの404じゃなく、Rackの404？</li>
<li>config.ruは動いている

<ul>
<li>
<code>touch hoge</code> して確認</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>まとめ</h2>
<ul>
<li>Webアプリ力が足りない</li>
<li>本業ではないので、気が向いたら再チャレンジする</li>
</ul>]]></content:encoded><dc:date>2013-08-10</dc:date><link>http://myokoym.github.com/entries/20130810/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130808/a2.html"><title>Ruby-GNOME2 Project Website</title><description>
FrontPage更新


ClutterとWebKitGTKを追記
GTK+ 3対応について記載
ruby1.8-devを削除



http://ruby-gnome2.sourceforge.jp/ja/


gnome2でググると最初に来る


</description><content:encoded><![CDATA[<ul>
<li>FrontPage更新

<ul>
<li>ClutterとWebKitGTKを追記</li>
<li>GTK+ 3対応について記載</li>
<li>ruby1.8-devを削除</li>
</ul>
</li>
<li>
<a href="http://ruby-gnome2.sourceforge.jp/ja/">http://ruby-gnome2.sourceforge.jp/ja/</a>

<ul>
<li>gnome2でググると最初に来る</li>
</ul>
</li>
</ul>]]></content:encoded><dc:date>2013-08-08</dc:date><link>http://myokoym.github.com/entries/20130808/a2.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130808/a1.html"><title>Ruby-GNOME2 クロスコンパイル日記</title><description>今日はpangoを進めた。

harfbuzz-0.9.17


bits/predefs.h


libc6-dev-amd64


gnu/stubs-32.h


libc6-dev（ただしi386-linux-gnuディレクトリ）
/usr/include/i386-linux-gnu/gnu/stubs-32.h
harfbuzzは/usr/include/gnuしか見てくれない
とりあ...</description><content:encoded><![CDATA[<p>今日はpangoを進めた。</p>
<ul>
<li>harfbuzz-0.9.17

<ul>
<li>bits/predefs.h

<ul>
<li>libc6-dev-amd64</li>
</ul>
</li>
<li>gnu/stubs-32.h

<ul>
<li>libc6-dev（ただしi386-linux-gnuディレクトリ）</li>
<li>/usr/include/i386-linux-gnu/gnu/stubs-32.h</li>
<li>harfbuzzは/usr/include/gnuしか見てくれない</li>
<li>とりあえずシンボリックリンク張った</li>
</ul>
</li>
<li>align.h:30:102: error: 'wcscpy' was not declared in this scope

<ul>
<li>つづく。</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content:encoded><dc:date>2013-08-08</dc:date><link>http://myokoym.github.com/entries/20130808/a1.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130808/a0.html"><title>ヘッダー探しツール</title><description>
packages.ubuntu.com


http://packages.ubuntu.com/
http://gihyo.jp/admin/serial/01/ubuntu-recipe/0016


apt-file


http://d.hatena.ne.jp/rx7/20080830/p1
http://d.hatena.ne.jp/rubikitch/20080406/120742...</description><content:encoded><![CDATA[<ul>
<li>packages.ubuntu.com

<ul>
<li><a href="http://packages.ubuntu.com/">http://packages.ubuntu.com/</a></li>
<li><a href="http://gihyo.jp/admin/serial/01/ubuntu-recipe/0016">http://gihyo.jp/admin/serial/01/ubuntu-recipe/0016</a></li>
</ul>
</li>
<li>apt-file

<ul>
<li><a href="http://d.hatena.ne.jp/rx7/20080830/p1">http://d.hatena.ne.jp/rx7/20080830/p1</a></li>
<li><a href="http://d.hatena.ne.jp/rubikitch/20080406/1207420372">http://d.hatena.ne.jp/rubikitch/20080406/1207420372</a></li>
<li>e.g.) apt-file search hoge.h</li>
</ul>
</li>
</ul>
]]></content:encoded><dc:date>2013-08-08</dc:date><link>http://myokoym.github.com/entries/20130808/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130807/a0.html"><title>TUIShogi 0.0.1</title><description>C/C++とOpenShogiLibの練習を兼ねて、ちょっとした将棋アプリを作成中。
https://github.com/myokoym/tuishogi
OpenShogiLibのサンプルを参考に、例外処理などを追加中。
普通にやる分にはcoreを吐かなくなったので、v0.0.1のタグを打った。
ただし、操作性も0.01くらい。
ちなみにテストはCutterで書いてます。</description><content:encoded><![CDATA[<p>C/C++とOpenShogiLibの練習を兼ねて、ちょっとした将棋アプリを作成中。</p>
<p><a href="https://github.com/myokoym/tuishogi">https://github.com/myokoym/tuishogi</a></p>
<p>OpenShogiLibのサンプルを参考に、例外処理などを追加中。</p>
<p>普通にやる分にはcoreを吐かなくなったので、v0.0.1のタグを打った。</p>
<p>ただし、操作性も0.01くらい。</p>
<p>ちなみにテストは<a href="http://cutter.sourceforge.net/index.html.ja">Cutter</a>で書いてます。</p>]]></content:encoded><dc:date>2013-08-07</dc:date><link>http://myokoym.github.com/entries/20130807/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130612/a0.html"><title>Testing a Sinatra app on Rack::Test with test-unit.</title><description>意訳: Rack::Testとtest-unitでSinatraアプリをテストする方法。
ディレクトリ構成の例
hogetra/
├─config.ru
├─hogetra.rb
├─views
│  └─index.haml
└─test
    └─test-hogetra.rb

test-hogetra.rb
ちなみに私のSinatra appはクラシックスタイルです。
参考
test-u...</description><content:encoded><![CDATA[<p>意訳: Rack::Testとtest-unitでSinatraアプリをテストする方法。</p>
<h3>ディレクトリ構成の例</h3>
<div class="highlight"><pre>hogetra/
├─config.ru
├─hogetra.rb
├─views
│  └─index.haml
└─test
    └─test-hogetra.rb
</pre></div>
<h3>test-hogetra.rb</h3>
<script src="https://gist.github.com/myokoym/5764563.js"></script><p>ちなみに私のSinatra appはクラシックスタイルです。</p>
<h3>参考</h3>
<p>test-unit - Ruby用単体テストフレームワーク<br><a href="http://test-unit.rubyforge.org/index.html.ja">http://test-unit.rubyforge.org/index.html.ja</a></p>
<p>brynary/rack-test · GitHub<br><a href="https://github.com/brynary/rack-test#readme">https://github.com/brynary/rack-test#readme</a></p>
<p>Rubyist Magazine - Sinatra 再入門、 Padrino / Rack / その先の何か<br><a href="http://magazine.rubyist.net/?0036-SinatraReintroduction">http://magazine.rubyist.net/?0036-SinatraReintroduction</a></p>]]></content:encoded><dc:date>2013-06-12</dc:date><link>http://myokoym.github.com/entries/20130612/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130501/a0.html"><title>Ruby-GNOME2 Packages Full Installer</title><description>Windowsでgemの依存関係が上手くインストールできないので、暫定対応として作成。
Linuxでも意外と使えそう。</description><content:encoded><![CDATA[<p>Windowsでgemの依存関係が上手くインストールできないので、暫定対応として作成。</p>
<script src="https://gist.github.com/myokoym/5489252.js"></script><p>Linuxでも意外と使えそう。</p>]]></content:encoded><dc:date>2013-05-01</dc:date><link>http://myokoym.github.com/entries/20130501/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130329/a0.html"><title>byobuでターミナル画面の履歴をスクロールする方法</title><description>スクロール方法は２種類あり、操作や戻れる行数などが異なります。
A. ちょっとしたスクロール
マウスで行う普通のスクロールです。

戻れる行数はそれほど多くない（数百行程度）
ウィンドウを切り替えると、履歴が消えて戻れなくなる

やりかた


.screenrcに下の設定を追加
termcapinfo xterm ti@:te@


byobuを再起動
ウィンドウの右端に出てくるスクロールバーをド...</description><content:encoded><![CDATA[<p>スクロール方法は２種類あり、操作や戻れる行数などが異なります。</p>
<h2>A. ちょっとしたスクロール</h2>
<p>マウスで行う普通のスクロールです。</p>
<ul>
<li>戻れる行数はそれほど多くない（数百行程度）</li>
<li>ウィンドウを切り替えると、履歴が消えて戻れなくなる</li>
</ul>
<h3>やりかた</h3>
<ol>
<li>
<p>.screenrcに下の設定を追加</p>
<div class="highlight"><pre>termcapinfo xterm ti@:te@
</pre></div>
</li>
<li><p>byobuを再起動</p></li>
<li><p>ウィンドウの右端に出てくるスクロールバーをドラッグ</p></li>
</ol>
<p><img src="/images/byobu-scrollbar-20130329_01.png" alt="byobu-scrollbar"></p>
<h2>B. 気合を入れてスクロール</h2>
<p>まじめにスタックトレースを読むときに使うスクロールです。</p>
<ul>
<li>byobuのデフォルトのスクロール方法</li>
<li>10,000行まで戻れる</li>
<li>ウィンドウを切り替えても残る</li>
</ul>
<h3>やりかた</h3>
<ol>
<li>F7キーを押下

<ul>
<li>F7キーを押すとスクロールモードが開始される</li>
</ul>
</li>
<li> viキーバインドで移動

<ul>
<li>カーソル移動は、moreやless、viなどと似たキーバインド</li>
<li>スペース -&gt; 選択 -&gt; スペースで、byobuのバッファにコピー</li>
<li>エスケープキー -&gt; ] で貼り付け</li>
</ul>
</li>
</ol>
<h2>参考</h2>
<p><a href="https://forums.ubuntulinux.jp/viewtopic.php?pid=97479#p97479">Ubuntu日本語フォーラム / byobuでバッファスクロールをマウスホイールでするには</a></p>
<p><a href="https://sites.google.com/site/hymd3a/linux/byobu">byobuを使ってみる - ひゃまだのブログ</a></p>
<p><a href="http://www.rwds.net/wiki?page=screen%A4%CE%B3%D0%BD%F1">screenの覚書 - Ktat's Wiki</a></p>
<p><a href="http://tthhfugapiyo.blogspot.jp/2012/07/screen.html">設定メモ: screenでマウススクロール</a></p>]]></content:encoded><dc:date>2013-03-29</dc:date><link>http://myokoym.github.com/entries/20130329/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130328/a0.html"><title>Ruby/GooCanvasのサンプル比較 - units-demo</title><description>最近、Ruby-GNOME2プロジェクトのサンプルで遊ばせてもらっています。
（サンプルをGObject Introspectionベースのバインディングに移植するなど。）
https://github.com/ruby-gnome2/ruby-gnome2/blob/master/goocanvas/sample/units-demo.rb
旧サンプル

GObject Introspectio...</description><content:encoded><![CDATA[<p>最近、Ruby-GNOME2プロジェクトのサンプルで遊ばせてもらっています。</p>
<p>（サンプルをGObject Introspectionベースのバインディングに移植するなど。）</p>
<p><a href="https://github.com/ruby-gnome2/ruby-gnome2/blob/master/goocanvas/sample/units-demo.rb">https://github.com/ruby-gnome2/ruby-gnome2/blob/master/goocanvas/sample/units-demo.rb</a></p>
<h2>旧サンプル</h2>
<p><img src="/images/units-demo-old-20130328_01.png" alt="units-demo-old-20130328_01"></p>
<h2>GObject Introspection 版</h2>
<ul>
<li>スピンボタンのデザインがGitっぽくなってます。</li>
<li>背景色が明るすぎず、目にやさしい感じでよさげです。 </li>
</ul>
<p><img src="/images/units-demo-gi-20130328_02.png" alt="units-demo-gi-20130328_02"></p>
<h2>C オリジナル</h2>
<ul>
<li>GI版と比べて、見た目はほとんど変わりません。</li>
<li>両方とも動かしてみましたが、よさげです。</li>
<li>お花が咲いています。

<ul>
<li>GI版にお花が咲いていないのは、<del>私がなまけた</del>コミットの意図を明確にするとともに、pull requestを小さくするするためです。</li>
<li>時間ができたら、勉強して咲かせる予定です。</li>
<li>ただ、オリジナルの実装はなんというか。。。むずかしい。</li>
<li>どなたか咲かせてくださるとありがたいです。</li>
</ul>
</li>
</ul>
<p><a href="https://git.gnome.org/browse/goocanvas/tree/demo/units-demo.c">https://git.gnome.org/browse/goocanvas/tree/demo/units-demo.c</a></p>
<p><img src="/images/units-demo-c-20130328_03.png" alt="units-demo-c-20130328_03"></p>]]></content:encoded><dc:date>2013-03-28</dc:date><link>http://myokoym.github.com/entries/20130328/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130312/a0.html"><title>rcairo で虹を描いてみた</title><description>放射グラデーション (Cairo::RadialPatternクラス) を使ってみました。

</description><content:encoded><![CDATA[<p>放射グラデーション (<a href="http://cairo.rubyforge.org/doc/ja/cairo-radial-pattern.html">Cairo::RadialPatternクラス</a>) を使ってみました。</p>
<p><img src="/images/niji-20130312.png" alt="niji-20130312"></p>
<script src="https://gist.github.com/myokoym/5143259.js"></script>]]></content:encoded><dc:date>2013-03-12</dc:date><link>http://myokoym.github.com/entries/20130312/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130310/a0.html"><title>とある文字列の画像をジェネレートするRubyスクリプト</title><description>画像描画ライブラリには、 Firefox や Rabbit などで使われている cairo の Ruby バインディングである rcairo を使っています。 
フォントはIPAex明朝とIPAexゴシックを使っているので、動かすときは以下からインストールしてください。
http://ossipedia.ipa.go.jp/ipafont/ipaexfont/download.html
グラデーシ...</description><content:encoded><![CDATA[<p>画像描画ライブラリには、 Firefox や Rabbit などで使われている cairo の Ruby バインディングである rcairo を使っています。 </p>
<p>フォントはIPAex明朝とIPAexゴシックを使っているので、動かすときは以下からインストールしてください。
<br><a href="http://ossipedia.ipa.go.jp/ipafont/ipaexfont/download.html">http://ossipedia.ipa.go.jp/ipafont/ipaexfont/download.html</a></p>
<p>グラデーションの向きなどは調査中です。。</p>
<h2>生成物</h2>
<p><img src="/images/toaru-image-20130310.png" alt="toaru-image-20130310"></p>
<h2>ソースコード</h2>
<script src="https://gist.github.com/myokoym/5128655.js"></script><h2>参考</h2>
<p>Rubyist Magazine - cairo: 2 次元画像描画ライブラリ
<br><a href="http://jp.rubyist.net/magazine/?0019-cairo">http://jp.rubyist.net/magazine/?0019-cairo</a></p>
<p>rcairo 事始め - takihiro日記
<br><a href="http://d.hatena.ne.jp/takihiro/20100331/1269992290">http://d.hatena.ne.jp/takihiro/20100331/1269992290</a></p>
<p>rcairo reference manual
<br><a href="http://cairo.rubyforge.org/doc/">http://cairo.rubyforge.org/doc/</a></p>]]></content:encoded><dc:date>2013-03-10</dc:date><link>http://myokoym.github.com/entries/20130310/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130309/a0.html"><title>『SQL　ゼロからはじめるデータベース操作』を読んだメモ</title><description>SQLの知識は、基本情報レベルの基礎と、業務で断片的に調べただけだったので、遅ればせながらちゃんとした入門書を読みました。
『SQL　ゼロからはじめるデータベース操作』サポートページ
http://www.geocities.jp/mickindex/database/db_support_prg_sql.html
COUNT関数 と NULL

COUNT(*) は、全レコード数
COUNT(c...</description><content:encoded><![CDATA[<p>SQLの知識は、基本情報レベルの基礎と、業務で断片的に調べただけだったので、遅ればせながらちゃんとした入門書を読みました。</p>
<p>『SQL　ゼロからはじめるデータベース操作』サポートページ
<br><a href="http://www.geocities.jp/mickindex/database/db_support_prg_sql.html">http://www.geocities.jp/mickindex/database/db_support_prg_sql.html</a></p>
<h2>COUNT関数 と NULL</h2>
<ul>
<li>COUNT(*) は、全レコード数</li>
<li>COUNT(column) は、columnがNULLのレコードを除いた数</li>
</ul>
<h2>AVG関数 と NULL</h2>
<ul>
<li>AVG(column) は、columnがNULLのレコードを除いた平均値</li>
</ul>
<h2>句ごとの実行順</h2>
<p>これによって別名が使えたり使えなかったりする。</p>
<ol>
<li>FROM</li>
<li>WHERE</li>
<li>GROUP BY</li>
<li>HAVING</li>
<li>SELECT</li>
<li>ORDER BY</li>
</ol>
<h2>INSERT … SELECT</h2>
<p>INSERT … SELECT文を使えば、テーブル同士でデータを受け渡せる。</p>
<ul>
<li>同じテーブル内の行を複製することもできる</li>
<li>キー重複に注意</li>
</ul>
<h2>ビュー</h2>
<p>ビューは、データではなくSELECT文を保持する。</p>
<h2>スカラ・サブクエリ</h2>
<ul>
<li>スカラ・サブクエリとは、値をひとつだけ返すサブクエリ</li>
<li>WHERE句で、比較演算の右辺として使える</li>
</ul>
<h2>IN句とサブクエリ</h2>
<p>値のリストを返すサブクエリは、IN句に記述できる。</p>
<h2>格言</h2>
<blockquote>
<p>結合の古い書き方や方言は、自分で使ってはならない。でも読めるようにはしておこう。</p>
</blockquote>]]></content:encoded><dc:date>2013-03-09</dc:date><link>http://myokoym.github.com/entries/20130309/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130302/a0.html"><title>Ruby 2.0.0 で classic スタイルの sinatra (1.3.4) が動かなかった件</title><description>sinatraのバージョンを1.3.4から1.3.5に上げたら動きました。
Rubyというより、RubyGemsが2.0に上がったからかも。

Rubyist Magazine - Sinatra 再入門、 Padrino / Rack / その先の何か
http://jp.rubyist.net/magazine/?0036-SinatraReintroduction
</description><content:encoded><![CDATA[<p>sinatraのバージョンを1.3.4から1.3.5に上げたら動きました。</p>
<p>Rubyというより、RubyGemsが2.0に上がったからかも。</p>
<blockquote>
<p>Rubyist Magazine - Sinatra 再入門、 Padrino / Rack / その先の何か
<br><a href="http://jp.rubyist.net/magazine/?0036-SinatraReintroduction">http://jp.rubyist.net/magazine/?0036-SinatraReintroduction</a></p>
</blockquote>]]></content:encoded><dc:date>2013-03-02</dc:date><link>http://myokoym.github.com/entries/20130302/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130223/a0.html"><title>kshのコマンドライン入力補完</title><description>入力補完に「タブが使えない」kshですが、別の方法で補完が可能です。
viモード（set -o vi）と、emacsモード（set -o emacs）でキーバインドが違います。
viモード
kshはviモードがデフォルトのことが多いです。
候補表示
Esc = 

「Esc」を入力した直後に「=」（イコール）を入力する

補完
Esc \

「Esc」を入力した直後に「\」（バックスラッシュまたは...</description><content:encoded><![CDATA[<p>入力補完に「タブが使えない」kshですが、別の方法で補完が可能です。</p>
<p>viモード（set -o vi）と、emacsモード（set -o emacs）でキーバインドが違います。</p>
<h2>viモード</h2>
<p>kshはviモードがデフォルトのことが多いです。</p>
<h3>候補表示</h3>
<p>Esc = </p>
<ul>
<li>「Esc」を入力した直後に「=」（イコール）を入力する</li>
</ul>
<h3>補完</h3>
<p>Esc \</p>
<ul>
<li>「Esc」を入力した直後に「\」（バックスラッシュまたは半角円記号）を入力する</li>
</ul>
<h2>emacsモード</h2>
<p>bashやreadlineなどでデフォルトのemacsモードです。</p>
<h3>候補表示</h3>
<p>Esc = </p>
<ul>
<li>「Esc」を入力した直後に「=」（イコール）を入力する

<ul>
<li>viモードと同じ</li>
</ul>
</li>
</ul>
<h3>補完</h3>
<p>Esc Esc</p>
<ul>
<li>「Esc」を2回入力する

<ul>
<li>viモードと違う</li>
<li>viモードより押しやすい</li>
</ul>
</li>
</ul>
<h2>参考</h2>
<h3>Escキーが押しづらいときの対策</h3>
<p>Escキーが押しづらい場合、コントロールキーで代用できます。</p>
<p>C-[</p>
<ul>
<li>
<p>「Ctrl」キーを押しながら「[」キーを押すと、OSはEscキーが押されたと思い込みます。</p>

<ul>
<li>制御コード表（ctrl列を参照） <a href="http://ash.jp/code/ctrltbl.htm">http://ash.jp/code/ctrltbl.htm</a>
</li>
</ul>
</li>
</ul>
<p>ちなみに世の中には2種類のVimmerがいて、押しやすいキーにEscを割り当てる人と、C-[を使う人に分かれています。私は後者です。</p>]]></content:encoded><dc:date>2013-02-23</dc:date><link>http://myokoym.github.com/entries/20130223/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130216/a0.html"><title>~/.rbenv/plugins/ruby-buildにゴミが残っていたせいで~/ruby-buildの更新がrbenvに反映されなかった件</title><description>ホームディレクトリのruby-buildを何度更新してもrbenvに反映されなくてなんでやねんと思っていたら、rbenvのプラグインディレクトリにもruby-buildがいて、そちらに優先権があったみたいでした。
どっちか消そう。</description><content:encoded><![CDATA[<p>ホームディレクトリのruby-buildを何度更新してもrbenvに反映されなくてなんでやねんと思っていたら、rbenvのプラグインディレクトリにもruby-buildがいて、そちらに優先権があったみたいでした。</p>
<p>どっちか消そう。</p>]]></content:encoded><dc:date>2013-02-16</dc:date><link>http://myokoym.github.com/entries/20130216/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20130127/a0.html"><title>文字列に通番を付けて殖やすツールを作成中</title><description>Text amplifier - テキスト増幅器
http://myokoym.net/textamp/
例1 hoge001〜hoge100をつくる

volume: 100
linefeed: ON
increment: ON


sign: #（任意）
start: 1
digit: 3


template: OFF


結果
hoge001〜hoge100ができます。

例2 ゲッターと...</description><content:encoded><![CDATA[<p>Text amplifier - テキスト増幅器</p>
<p><a href="http://myokoym.net/textamp/">http://myokoym.net/textamp/</a></p>
<h2>例1 hoge001〜hoge100をつくる</h2>
<ul>
<li>volume: 100</li>
<li>linefeed: ON</li>
<li>increment: ON

<ul>
<li>sign: #（任意）</li>
<li>start: 1</li>
<li>digit: 3</li>
</ul>
</li>
<li>template: OFF</li>
</ul>
<p><img src="/images/textamp_20130127_01.jpg" alt="textamp_20130127_01"></p>
<h3>結果</h3>
<p>hoge001〜hoge100ができます。</p>
<p><img src="/images/textamp_20130127_02.jpg" alt="textamp_20130127_02"></p>
<h2>例2 ゲッターとセッターをつくる</h2>
<p>通番以外にも、部分的に置換する機能があります。</p>
<ul>
<li>volume: 3（3組の場合）</li>
<li>linefeed: ON</li>
<li>increment: OFF</li>
<li>template: ON

<ul>
<li>sign: xxx（任意）</li>
<li>parts: hoge huga piyo（改行区切り）</li>
</ul>
</li>
</ul>
<p><img src="/images/textamp_20130127_03.jpg" alt="textamp_20130127_03"></p>
<h3>結果</h3>
<p>ゲッターとセッターができます。</p>
<p><img src="/images/textamp_20130127_04.jpg" alt="textamp_20130127_04"></p>
<h2>HTTP-GETに対応</h2>
<h3>微修正したいとき</h3>
<ul>
<li>フォームの入力内容は保存していないので消えてしまいます。</li>
<li>その代わりにHTTP-GETに対応しているので、パラメータをいじれば手軽に微修正が可能です。</li>
</ul>
<h3>フォームのドロップダウンが足りないとき</h3>
<ul>
<li>volumeはフォームでは100までしかありませんが、HTTP-GETなら101個以上に殖やすことが可能です。</li>
<li>signやstart、digitも同様です。</li>
</ul>
<h2>TODO</h2>
<ul>
<li>デザインをもっとわかりやすくしたい。

<ul>
<li>CSS書くとか</li>
</ul>
</li>
<li>操作性をよくしたい。

<ul>
<li>JavaScript書くとか</li>
</ul>
</li>
</ul>]]></content:encoded><dc:date>2013-01-27</dc:date><link>http://myokoym.github.com/entries/20130127/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20121125/a0.html"><title>文字列とバイト列（16進数）を相互変換するWebアプリ作成中</title><description>MOJIHEX - The Converter of Character and Hex
http://myokoym.net/mojihex/
使用例


char -&amp;gt; byte (UTF-8)


あ -&amp;gt; e38182
あいう -&amp;gt; e38182 e38184 e38186



char -&amp;gt; byte (Shift_JIS)


あ -&amp;gt; 82a0



...</description><content:encoded><![CDATA[<p>MOJIHEX - The Converter of Character and Hex</p>
<p><a href="http://myokoym.net/mojihex/">http://myokoym.net/mojihex/</a></p>
<h2>使用例</h2>
<ul>
<li>
<p>char -&gt; byte (UTF-8)</p>

<ul>
<li>あ -&gt; e38182</li>
<li>あいう -&gt; e38182 e38184 e38186</li>
</ul>
</li>
<li>
<p>char -&gt; byte (Shift_JIS)</p>

<ul>
<li>あ -&gt; 82a0</li>
</ul>
</li>
<li>
<p>char -&gt; byte (CP930)</p>

<ul>
<li>あ -&gt; 0e44810f</li>
</ul>
</li>
<li>
<p>byte -&gt; char (UTF-8)</p>

<ul>
<li>e38182 e38184 e38186 -&gt; あいう</li>
</ul>
</li>
</ul>
<h2>使える文字コード</h2>
<p>以下の文字コードを選択できます。</p>
<ul>
<li>UTF-8</li>
<li>Shift_JIS</li>
<li>EUC-JP</li>
<li>CP930(EBCDIC)</li>
<li>UTF-16BE</li>
</ul>
<p>HTTP-GETにも対応しており、上記以外の文字コードも使用可能です。</p>
<ul>
<li>RubyのEncoding::Converterクラスで使用可能な文字コード</li>
<li>サーバーのiconvで使用可能な文字コード

<ul>
<li><a href="http://myokoym.net/mojihex/iconv.html">http://myokoym.net/mojihex/iconv.html</a></li>
</ul>
</li>
</ul>
<h2>内部的な話</h2>
<ol>
<li>まずはString#encodeで変換しようとします。</li>
<li>指定された文字コードが使用できなかった場合、iconvをrequireしてIconv.convで変換します。

<ul>
<li>iconvライブラリの使用は非推奨らしいのですが、CP930(EBCDIC)を使いたいので仕方なく</li>
</ul>
</li>
<li>iconvにも定義されていない文字コードだった場合、エラーになります。</li>
</ol>
<h2>参考</h2>
<p>instance method String#encode
<a href="http://doc.ruby-lang.org/ja/1.9.3/method/String/i/encode.html">http://doc.ruby-lang.org/ja/1.9.3/method/String/i/encode.html</a></p>
<p>class Encoding::Converter
<a href="http://doc.ruby-lang.org/ja/1.9.3/class/Encoding=3a=3aConverter.html">http://doc.ruby-lang.org/ja/1.9.3/class/Encoding=3a=3aConverter.html</a></p>
<p>library iconv
<a href="http://doc.ruby-lang.org/ja/1.9.3/library/iconv.html">http://doc.ruby-lang.org/ja/1.9.3/library/iconv.html</a></p>
<p>GitHub - myokoym/mojihex
<a href="https://github.com/myokoym/mojihex">https://github.com/myokoym/mojihex</a></p>]]></content:encoded><dc:date>2012-11-25</dc:date><link>http://myokoym.github.com/entries/20121125/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20121123/a0.html"><title>コマンドラインのemacsモードを使いたくない理由</title><description>1. C-hがC-jに近い

C-jはEnterキーコードに割り当てられていることが多い


1文字削除しようとして誤実行とか笑えない



2. C-nがC-mとC-jに近い

C-mもEnterキーコードに割り当てられていることが多い


ヒストリ移動しようとして誤実行とか笑えない



3. C-pがC-oに近い

C-oもEnterキーコードに割り当てられていることが多い


ヒストリ移動...</description><content:encoded><![CDATA[<h2>1. C-hがC-jに近い</h2>
<ul>
<li>C-jはEnterキーコードに割り当てられていることが多い

<ul>
<li>1文字削除しようとして誤実行とか笑えない</li>
</ul>
</li>
</ul>
<h2>2. C-nがC-mとC-jに近い</h2>
<ul>
<li>C-mもEnterキーコードに割り当てられていることが多い

<ul>
<li>ヒストリ移動しようとして誤実行とか笑えない</li>
</ul>
</li>
</ul>
<h2>3. C-pがC-oに近い</h2>
<ul>
<li>C-oもEnterキーコードに割り当てられていることが多い

<ul>
<li>ヒストリ移動しようとして誤実行とか笑えない</li>
</ul>
</li>
</ul>
<h2>4. C-dを押しすぎるとログアウトされる</h2>
<ul>
<li>C-dで端末からログアウトされることが多い

<ul>
<li>1文字削除しようとしてログアウトとか笑える</li>
</ul>
</li>
</ul>
<h2>対策</h2>
<ul>
<li>C-hはC-g気味に押す</li>
<li>C-nとC-pを使わずにC-rを使う</li>
<li>C-dは連打しない。C-kなどを使う</li>
<li>echo "set -o vi" &gt;&gt;~/.*shrc</li>
</ul>
<h2>参考</h2>
<h3>emacsモードとviモードの解説</h3>
<p><a href="http://www.hpc.cs.ehime-u.ac.jp/%7Eaman/linux/bash/command_line.html#2.2_vi_mode">http://www.hpc.cs.ehime-u.ac.jp/~aman/linux/bash/command_line.html#2.2_vi_mode</a></p>
<h3>制御コード表（ctrl列を参照）</h3>
<p><a href="http://ash.jp/code/ctrltbl.htm">http://ash.jp/code/ctrltbl.htm</a></p>]]></content:encoded><dc:date>2012-11-23</dc:date><link>http://myokoym.github.com/entries/20121123/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20121009/a0.html"><title>日本語のモーラ（拍）を数えるWebアプリつくった</title><description>拍数え - モーラ（拍）計算機
http://myokoym.net/mora/
単語ごとに辞書から読みを引いて数えるため、「明日」は「あした」で固定です。文脈によって「あす」と読むなどの高度なことはできません。
もうひとつの弱点は叙々苑です。

辞書に載っていない語句だと、「々」が0拍になってしまう
サーバーのMeCabはIPA辞書を使っており、残念ながら叙々苑は載っていない

小さい「ぁぃぅぇ...</description><content:encoded><![CDATA[<p>拍数え - モーラ（拍）計算機</p>
<p><a href="http://myokoym.net/mora/">http://myokoym.net/mora/</a></p>
<p>単語ごとに辞書から読みを引いて数えるため、「明日」は「あした」で固定です。文脈によって「あす」と読むなどの高度なことはできません。</p>
<p>もうひとつの弱点は叙々苑です。</p>
<ul>
<li>辞書に載っていない語句だと、「々」が0拍になってしまう</li>
<li>サーバーのMeCabはIPA辞書を使っており、残念ながら叙々苑は載っていない</li>
</ul>
<p>小さい「ぁぃぅぇぉ」の扱いは微妙ですが、今は数えてません。</p>
<p>ソースコードはこちら。</p>
<ul>
<li><p>Webページ
<a href="https://github.com/myokoym/mora-web">https://github.com/myokoym/mora-web</a></p></li>
<li><p>ライブラリ（RubyGems）
<a href="https://github.com/myokoym/mecab-mora">https://github.com/myokoym/mecab-mora</a></p></li>
</ul>
<p>※拍(Mora)が正しいです。今まで音節(Syllable)だと思って作っていたので、いろいろ修正します。</p>
<p><a href="http://sp.cis.iwate-u.ac.jp/sp/lessonj/doc/moraj.html">http://sp.cis.iwate-u.ac.jp/sp/lessonj/doc/moraj.html</a></p>]]></content:encoded><dc:date>2012-10-09</dc:date><link>http://myokoym.github.com/entries/20121009/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20121006/a0.html"><title>日本語の文章を音節で分割して音数を数えるプログラム</title><description>日本語の音節はわかりやすく、かな１文字が１音になります。
例外として、小さい「ゃ」「ゅ」「ょ」は数えません。

日本語の音数に関する質問です。 「今日」の「ょ」や「赤ちゃん」の「ゃ」などは、... - Yahoo!知恵袋
http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1376602573

いちいち指を折って数えるのに疲れたので勢...</description><content:encoded><![CDATA[<p>日本語の音節はわかりやすく、かな１文字が１音になります。
例外として、小さい「ゃ」「ゅ」「ょ」は数えません。</p>
<blockquote>
<p>日本語の音数に関する質問です。 「今日」の「ょ」や「赤ちゃん」の「ゃ」などは、... - Yahoo!知恵袋
<a href="http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1376602573">http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1376602573</a></p>
</blockquote>
<p>いちいち指を折って数えるのに疲れたので勢いで書きました。</p>
<script src="https://gist.github.com/3845114.js"> </script><p>MeCabで形態素解析した後、読みの部分から音節の文字以外を抜いて数えてます。</p>
<p>使ってみるとけっこう便利でした。類似ライブラリが見つからなかったので、gem化する予定です。</p>
<p>ライセンスとか名前空間とかどうしよう。</p>]]></content:encoded><dc:date>2012-10-06</dc:date><link>http://myokoym.github.com/entries/20121006/a0.html</link><author>myokoym</author></item><item about="http://myokoym.github.com/entries/20120929/a0.html"><title>わたし流カップ麺の食べ方 - 乾物トッピングのすすめ</title><description>ひとり暮らしの味方、カップ麺。
早い、安い、楽ちんと三拍子揃った食べ物です。
ただ、現代を生きる者としては、やっぱり栄養が気になりますよね。
そこで、カップ麺の利点はそのままに、栄養価を高める方法を考えました。
たどり着いたのが、乾物のトッピングです。
乾物

乾物（かんぶつ）は、保存性や食味の向上を目的として水分を抜き乾燥させた食品のことである。
(乾物 - Wikipedia)

やはり保存性...</description><content:encoded><![CDATA[<p>ひとり暮らしの味方、カップ麺。</p>
<p>早い、安い、楽ちんと三拍子揃った食べ物です。</p>
<p>ただ、現代を生きる者としては、やっぱり栄養が気になりますよね。</p>
<p>そこで、カップ麺の利点はそのままに、栄養価を高める方法を考えました。</p>
<p>たどり着いたのが、乾物のトッピングです。</p>
<h2>乾物</h2>
<blockquote>
<p>乾物（かんぶつ）は、保存性や食味の向上を目的として水分を抜き乾燥させた食品のことである。
(乾物 - Wikipedia)</p>
</blockquote>
<p>やはり保存性が高いのは、買いだめが利くので便利です。大抵のものは水で戻すだけで調理が済むので、カップ麺と相性バツグンですね。</p>
<h2>トッピングの種類</h2>
<p>スープの味によって合う合わないがあります。
ここは好みですが、わたしルールを挙げておきます。</p>
<h3>万能</h3>
<ul>
<li>乾燥わかめ</li>
</ul>
<h3>醤油系</h3>
<ul>
<li>かつおぶし</li>
</ul>
<h3>味噌系</h3>
<ul>
<li>すりごま（白）</li>
</ul>
<p>乾燥わかめは値上がりが続いており、スーパーから国産モノが消えたりしていますが、ネット通販なら手に入ります。わかめは何に入れても合いますし、栄養価も高いのでおすすめです。すりごまは、擂った後の状態で売っているのを買います。かつおぶしは言うまでもありません。</p>
<h3>ポイント</h3>
<p>味のついた乾物を入れる場合、付属の調味料を少なめにすることで、バランスが保てます。さらに、スープが飲みやすくなるので、おすすめです。</p>
<h2>今後の展望</h2>
<p>ググっていたら、よさげな乾物専門店を見つけました。</p>
<p>乾物を食べよう！「徳永乾物ネットショップ」
<a href="http://www.tokukan.com/index.htm">http://www.tokukan.com/index.htm</a></p>
<p>まるごと煮干し、焼き玉ねぎ、元気ごまなど、心躍る響きの商品が見やすいホームページに並んでいました。早速、注文してみたいと思います。</p>]]></content:encoded><dc:date>2012-09-29</dc:date><link>http://myokoym.github.com/entries/20120929/a0.html</link><author>myokoym</author></item></rdf:RDF>